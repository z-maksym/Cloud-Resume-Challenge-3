# This is a basic workflow to help you get started with Actions

name: CI
on:
  push:
    branches: [ "Tf-n-Py" ]
# env:
#   GO_VERSION: 1.18.x

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Terraform Setup
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform Init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: './cloud-resume-challenge/'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    - name: Terraform validate
      run: terraform validate

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_ACTION_WORKING_DIR: './cloud-resume-challenge/'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# jobs:
#   unit-test-backend:
#     runs-on: ubuntu-latest
#     timeout-minutes: 2
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-go@v2.1.3
#         with:
#           go-version: ${{ env.GO_VERSION }}
#       - name: test get-function
#         run: cd cloud-resume-challenge/get-function && go test -v ./ && cd ../../
#       - name: test put-function
#         run: cd cloud-resume-challenge/put-function && go test -v ./ && cd ../../

#   build-and-deploy-backend:
#     needs: unit-test-backend
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#       - uses: aws-actions/setup-sam@v1
#       - uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1
#       - run: sam build
#         working-directory: cloud-resume-challenge
#       - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
#         working-directory: cloud-resume-challenge

#   integration-test-backend:
#     needs: build-and-deploy-backend
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - run: cd cloud-resume-challenge && make integration-test && cd ../../

#   end-to-end-test:
#     needs: integration-test-backend
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v2
#         with:
#           node-version: 14
#       - run: cd cloud-resume-challenge/end-to-end-test && npm install && node index.js

#   deploy-frontend:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --delete
#         env:
#           AWS_S3_BUCKET: crc-bucket-3
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           SOURCE_DIR: cloud-resume-challenge/resume-site
      
