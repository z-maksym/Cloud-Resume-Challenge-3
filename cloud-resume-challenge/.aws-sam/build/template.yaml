AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

  '
Globals:
  Function:
    Timeout: 5
    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: crc-bucket-3
  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z01474152HISLY102SXTC
      RecordSets:
      - Name: mz-cloud-resume-challenge.site
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName:
            Fn::GetAtt:
            - MyDistribution
            - DomainName
  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: mz-cloud-resume-challenge.site
      ValidationMethod: DNS
  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn:
            Ref: MyCertificate
          SslSupportMethod: sni-only
        Aliases:
        - mz-cloud-resume-challenge.site
        - www.mz-cloud-resume-challenge.site
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: crc-bucket-3.s3-website.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
        - DomainName: crc-bucket-3.s3-website.us-east-1.amazonaws.com
          Id: crc-bucket-3.s3-website.us-east-1.amazonaws.com
          CustomOriginConfig:
            OriginProtocolPolicy: match-viewer
        Enabled: 'true'
        DefaultRootObject: index.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: MyWebsite
              - /*
      Bucket:
        Ref: MyWebsite
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: hello-world
      Runtime: go1.x
      Architectures:
      - x86_64
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
    Metadata:
      SamResourceId: HelloWorldFunction
Outputs:
  HelloWorldAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: First Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
